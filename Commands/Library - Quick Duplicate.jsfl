/** * * made by: colin duffy * created: dec.2.2008 * **/trace = fl.trace;var lib = fl.getDocumentDOM().library;var select = [];select = lib.getSelectedItems ();if (select.length <= 0) {		alert ("Please make a selection in the library" );	} else {	settings = fl.getDocumentDOM ().xmlPanel (fl.configURI + "Commands/Library - Quick Duplicate.xml");	var folder = '';	if (settings.dismiss == "accept") {		var _items = select;		var total = Number (settings._num);				if (total > 0) {						for (var i = 0; i < _items.length; i++) {								// FOLDER NAME TO PLACE DUPLICATES INTO				if (settings.folderName != '') {					folder = settings.folderName;				} else {					folder = _items[i].name + ' duplicates';				}				lib.newFolder (folder);								// LINAGE				var linkage = lib.getItemProperty ("linkageBaseClass");								n = 0;							while (n < total) {					if (lib.duplicateItem (_items [i].name)) {						var _selected = lib.getSelectedItems ();						lib.selectItem (_items [i].name + ' copy');						var split = _items [i].name.split ('/');												// ITEM NAME						var itemName = '';						(n < 9) ? itemName = split[split.length-1] + '[0' + (n + 1) + ']' : itemName =  split[split.length-1] + '[' + (n + 1) + ']';						lib.setItemProperty ('name', itemName);												// BASE CLASS						if (settings.copyBaseClass == "true")						{							lib.setItemProperty ("linkageExportForAS", true);							lib.setItemProperty ("linkageIdentifier", itemName);							lib.setItemProperty ("linkageBaseClass", linkage);							lib.setItemProperty ("linkageExportInFirstFrame", true);						}												// MOVE TO FOLDER						lib.moveToFolder (folder);						lib.expandFolder (false, true, folder);						lib.selectItem (_selected);					} else {						alert (_items [i].name + '[' + n + '] was not created');					}					n++;				}			}		} else {			alert ("1 or More duplicates required" );		}	}}