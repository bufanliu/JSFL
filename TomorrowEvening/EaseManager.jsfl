function sendEase( path ) {	var currentDoc = fl.getDocumentDOM();	var timeline = currentDoc.getTimeline()	var selectedFrames = timeline.getSelectedFrames();	var selectedLayers = timeline.getSelectedLayers();		var select = timeline.getSelectedLayers ();	var easePath = path.split("||");	var xPath = "";	var yPath = "";	var splitPath = [];	var newPath = [];	for( var i = 0; i < easePath.length; i++ ) {		splitPath = easePath[i].split(" y:");		xPath = splitPath[0].split("x:")[1];		yPath = splitPath[1];		newPath[i] = { x: Number(xPath), y: Number(yPath) };	}		timeline.createMotionTween();		var selectFrameLayers = selectedFrames.length/3;	for(var i = 0; i < selectFrameLayers; i++)	{		var layerIndex = selectedFrames[(i*3)];		var frameIndex = selectedFrames[(i*3)+1];		var theFrame = timeline.layers[layerIndex].frames[frameIndex];		theFrame.hasCustomEase = true;		theFrame.setCustomEase( "all", newPath );	}}function getXMLPath() {	return fl.configURI + "TomorrowEvening/eases.xml";}function getEase() {	var currentDoc = fl.getDocumentDOM();	var timeline = currentDoc.getTimeline()	var selectedFrames = timeline.getSelectedFrames();	var selectedLayers = timeline.getSelectedLayers();		if( selectedLayers.length != 1 || selectedFrames.length != 3 ) {		fl.trace( "Please select 1 frame of 1 layer to retrieve ease data." );		return "";	}		var selectFrameLayers = selectedFrames.length/3;		var frameEase = [];	var layerIndex = selectedFrames[0];	var frameIndex = selectedFrames[1];	var theFrame = timeline.layers[layerIndex].frames[frameIndex];	var curveObj = theFrame.getCustomEase( "all" );	for( var j = 0; j < curveObj.length; j++ ) {		frameEase[j] = curveObj[j].x + "|" + curveObj[j].y;	}	return frameEase.join("||");}function getEaseCSS( path ) {	var durationPath = path.split("+");	var easePath = durationPath[0].split("||");	var xPath = "";	var yPath = "";	var splitPath = [];	for( var i = 0; i < easePath.length; i++ ) {		splitPath = easePath[i].split(" y:");		xPath = splitPath[0].split("x:")[1];		yPath = splitPath[1];	}		splitPath = easePath[1].split(" y:");	var pos0X = splitPath[0].split("x:")[1];	var pos0Y = splitPath[1];		splitPath = easePath[2].split(" y:");	var pos1X = splitPath[0].split("x:")[1];	var pos1Y = splitPath[1];		var output = "";	var duration = durationPath[1];	output +=	"-webkit-transition: all " + duration + "ms cubic-bezier(" + pos0X + ", " + pos0Y + ", " + pos1X + ", " + pos1Y + ");\n";	output +=	"   -moz-transition: all " + duration + "ms cubic-bezier(" + pos0X + ", " + pos0Y + ", " + pos1X + ", " + pos1Y + ");\n";	output +=	"    -ms-transition: all " + duration + "ms cubic-bezier(" + pos0X + ", " + pos0Y + ", " + pos1X + ", " + pos1Y + ");\n";	output +=	"     -o-transition: all " + duration + "ms cubic-bezier(" + pos0X + ", " + pos0Y + ", " + pos1X + ", " + pos1Y + ");\n";	output +=	"        transition: all " + duration + "ms cubic-bezier(" + pos0X + ", " + pos0Y + ", " + pos1X + ", " + pos1Y + ");\n\n";		output +=	"-webkit-transition-timing-function: cubic-bezier(" + pos0X + ", " + pos0Y + ", " + pos1X + ", " + pos1Y + ");\n";	output +=	"   -moz-transition-timing-function: cubic-bezier(" + pos0X + ", " + pos0Y + ", " + pos1X + ", " + pos1Y + ");\n";	output +=	"    -ms-transition-timing-function: cubic-bezier(" + pos0X + ", " + pos0Y + ", " + pos1X + ", " + pos1Y + ");\n";	output +=	"     -o-transition-timing-function: cubic-bezier(" + pos0X + ", " + pos0Y + ", " + pos1X + ", " + pos1Y + ");\n";	output +=	"        transition-timing-function: cubic-bezier(" + pos0X + ", " + pos0Y + ", " + pos1X + ", " + pos1Y + ");";		fl.trace( output );	}function getConfigURI() {	return fl.configURI;}